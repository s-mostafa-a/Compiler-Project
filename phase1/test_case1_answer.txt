type 					 value 					 line 					 lexpos 
int_KW					int					2					1
idNum					1firstFunc					2					5
Opening_Parentheses					(					2					15
Closing_Parentheses					)					2					16
Opening_Brace					{					2					18
int_KW					int					3					20
idLetter					firstNum					3					24
Semicolon					;					3					33
int_KW					int					4					35
idLetter					secondNum					4					39
Semicolon					;					4					49
idLetter					firstNum					5					51
Equal					=					5					59
Num					5					5					61
Times					*					5					63
Num					10					5					65
Semicolon					;					5					68
idLetter					secondNum					5					70
Equal					=					5					79
idLetter					firstNum					5					81
PP					++					5					90
Semicolon					;					5					93
idLetter					Giveback					6					118
idLetter					secondNum					6					127
Closing_Brace					}					6					137
void_KW					void					7					139
idLetter					secondFunc					7					144
Opening_Parentheses					(					7					154
bool_KW					bool					7					155
idLetter					B					7					160
Semicolon					;					7					162
int_KW					int					7					164
idLetter					A					7					168
Closing_Parentheses					)					7					170
Opening_Brace					{					7					172
int_KW					int					7					174
idLetter					firstArray					7					178
Opening_Bracket					[					7					189
Num					5					7					190
Closing_Bracket					]					7					191
Semicolon					;					7					193
bool_KW					bool					8					195
idLetter					A1					8					200
Semicolon					;					8					203
bool_KW					bool					9					205
idLetter					A2					9					210
Semicolon					;					9					213
idLetter					A1					10					215
Equal					=					10					217
idLetter					firstNum					10					219
LEqual					<=					10					228
idLetter					secondNum					10					231
idLetter					A2					10					241
Equal					=					10					244
idLetter					B					10					246
Semicolon					;					10					248
If_KW					if					11					250
Opening_Parentheses					(					11					253
idLetter					A1					11					255
And_KW					and					11					258
idLetter					Then					11					262
idLetter					A2					11					267
Closing_Parentheses					)					11					270
Continue_KW					continue					11					272
Semicolon					;					11					281
idLetter					Other					12					283
Opening_Brace					{					13					289
int_KW					int					14					291
idLetter					B1					14					295
Semicolon					;					14					298
If_KW					if					15					300
Opening_Parentheses					(					15					303
idLetter					B1					15					304
LessOP					<					15					306
Num					5					15					307
Closing_Parentheses					)					15					308
Till_KW					till					15					310
Opening_Parentheses					(					15					314
idLetter					B1					15					315
NonEqualOP					!=					15					318
Num					5					15					321
Closing_Parentheses					)					15					322
idLetter					B1					15					324
PP					++					15					326
Semicolon					;					15					328
idLetter					If					16					330
Opening_Parentheses					(					16					333
idLetter					B1					16					334
EEqual					==					16					336
idLetter					A					16					339
Closing_Parentheses					)					16					340
idLetter					A2					16					342
Equal					=					16					345
False_KW					false					16					347
Semicolon					;					16					352
Closing_Brace					}					16					354
ComeBack_KW					comeBack					16					356
Semicolon					;					16					364
Closing_Brace					}					16					366
