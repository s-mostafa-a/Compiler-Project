
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocOPENING_PARENTHESESnonassocOTHER_KWleftTHEN_KWleftELSE_KWleftAA_LOPOO_LOPTIL_LOPAND_LOPOR_LOPleftEQ_OPPLE_OPMIE_OPMUE_OPDIE_OPleftPL_OPMI_OPMU_OPDI_OPPE_OPleftMI_OPMU_OPQU_UOPAA_LOP AND_LOP BOOLEAN_KW BOOL_KW CHARACTER_KW CHAR_KW CLOSING_BRACE CLOSING_BRACKET CLOSING_PARENTHESES COLON COMA COMEBACK_KW COMMENT CONST_KW CONTINUE_KW DIE_OP DI_OP ELSE_KW EQ_OP EQ_REL FALSE GE_REL GIVEBACK_KW GT_REL IF_KW INTEGER_KW INT_KW LETTER LE_REL LT_REL MIE_OP MI_OP MM_OP MUE_OP MU_OP NEQ_REL NUMBER OO_LOP OPENING_BRACE OPENING_BRACKET OPENING_PARENTHESES OR_LOP OTHER_KW PE_OP PLE_OP PL_OP PP_OP QU_UOP SEMICOLON STATIC_KW THEN_KW TILL_KW TIL_LOP TRUE VOID_KWprogram : listnumOrLetter : NUMBER\n        | LETTER\n        |\n        list : list declaration\n        | declarationdeclaration : VOID_KW LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES OPENING_BRACE localDeclarations statementList CLOSING_BRACE\n        | VOID_KW LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES statementWithoutBracket\n        | type LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES OPENING_BRACE localDeclarations statementList CLOSING_BRACE\n        | type LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES statementWithoutBracket\n        | type LETTER varInitialization SEMICOLON\n        | type LETTER varInitialization COMA variableList SEMICOLONScopedVariableDec : scopedSpecifier variableList SEMICOLONvariableList : variableList COMA variableList\n        | varInitializationvarInitialization : varForm\n        | varForm COLON OPENING_PARENTHESES eachExpression CLOSING_PARENTHESESvarForm : LETTER OPENING_BRACKET NUMBER CLOSING_BRACKET\n        | numOrLetter scopedSpecifier : STATIC_KW type\n        | typetype : BOOLEAN_KW\n        | CHARACTER_KW\n        | INTEGER_KW\n        | CHAR_KW\n        | BOOL_KW\n        | INT_KWparameter : listOfParameters\n        | listOfParameters : listOfParameters SEMICOLON paramTypeList\n        | paramTypeListparamTypeList : type paramListparamList :  paramList COMA paramId\n        | paramIdlocalDeclarations : ScopedVariableDec localDeclarations\n        | paramId : LETTER\n        | LETTER OPENING_BRACKET CLOSING_BRACKETstatement : phrase\n        | compoundPhrase\n        | selectPhrase\n        | iterationPhrase\n        | returnPhrase\n        | continuestatementWithoutBracket : phrase\n        | selectPhrase\n        | iterationPhrase\n        | returnPhrase\n        | continuecompoundPhrase : OPENING_BRACE localDeclarations  statementList CLOSING_BRACEstatementList : statementList statement\n        | phrase : allExpression SEMICOLON\n        | SEMICOLONselectPhrase : IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statementWithoutBracket\n                        | IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statementWithoutBracket OTHER_KW statement\n                        | IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES ifBodyWithBracket\n                            ifBodyWithBracket : OPENING_BRACE ScopedVariableDec localDeclarations statementList CLOSING_BRACE\n        | OPENING_BRACE statement statement statementList CLOSING_BRACE\n        | OPENING_BRACE statement OTHER_KW statement statement CLOSING_BRACE\n        | OPENING_BRACE statement statement OTHER_KW statement CLOSING_BRACE\n        | OPENING_BRACE statement OTHER_KW statement statement OTHER_KW statement CLOSING_BRACE\n        iterationPhrase : TILL_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statementreturnPhrase : COMEBACK_KW SEMICOLON\n        | GIVEBACK_KW allExpression SEMICOLON\n        | GIVEBACK_KW numOrLetter SEMICOLONcontinue : CONTINUE_KW SEMICOLONallExpression : alterable mathOp allExpression\n        | alterable PP_OP\n        | alterable MM_OP\n        | eachExpressionmathOp : EQ_OP\n        | PLE_OP\n        | MIE_OP\n        | MUE_OP\n        | DIE_OPeachExpression : eachExpression logicOp eachExpression\n        | eachExpression logicOp THEN_KW eachExpression\n        | logicOp eachExpression\n        | relExpression\n        | eachExpression logicOp ELSE_KW eachExpressionrelExpression : mathEXP compareType mathEXP\n        | mathEXPmathEXP : mathEXP op mathEXP\n        | unaryExpressioncompareType : equal\n        | nonEqualequal : LE_REL\n        | GE_REL\n        | EQ_RELnonEqual : GT_REL\n        | LT_REL\n        | NEQ_RELop : PL_OP\n        | MI_OP\n        | MU_OP\n        | DI_OP\n        | PE_OPunaryExpression : unaryop unaryExpression\n        | factorunaryop : MI_OP\n        | MU_OP\n        | QU_UOPfactor : inalterable\n        | alterablealterable : numOrLetter\n        | alterable OPENING_BRACKET allExpression CLOSING_BRACKET\n        | alterable LETTERinalterable : OPENING_PARENTHESES allExpression CLOSING_PARENTHESES\n        | constant\n        | LETTER OPENING_PARENTHESES args CLOSING_PARENTHESESargs : arguments\n        | arguments : arguments COMA allExpression\n        | allExpressionconstant : CONST_KW\n        | TRUE\n        | FALSElogicOp : AA_LOP\n        | OO_LOP\n        | TIL_LOP\n        | AND_LOP\n        | OR_LOP'
    
_lr_action_items = {'VOID_KW':([0,2,3,12,28,44,45,46,47,48,49,51,84,86,97,101,104,150,151,160,162,163,164,165,166,167,174,177,178,180,185,186,194,195,198,200,202,],[4,4,-6,-5,-11,-8,-45,-46,-47,-48,-49,-54,-10,-12,-53,-64,-67,-65,-66,-7,-39,-40,-41,-42,-43,-44,-9,-55,-57,-63,-50,-56,-58,-59,-61,-60,-62,]),'BOOLEAN_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[6,6,-6,-5,6,6,-11,6,6,-8,-45,-46,-47,-48,-49,-54,6,-10,-12,6,6,-53,-64,-67,-65,-66,6,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,6,-63,6,-50,-56,-58,-59,-61,-60,-62,]),'CHARACTER_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[7,7,-6,-5,7,7,-11,7,7,-8,-45,-46,-47,-48,-49,-54,7,-10,-12,7,7,-53,-64,-67,-65,-66,7,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,7,-63,7,-50,-56,-58,-59,-61,-60,-62,]),'INTEGER_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[8,8,-6,-5,8,8,-11,8,8,-8,-45,-46,-47,-48,-49,-54,8,-10,-12,8,8,-53,-64,-67,-65,-66,8,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,8,-63,8,-50,-56,-58,-59,-61,-60,-62,]),'CHAR_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[9,9,-6,-5,9,9,-11,9,9,-8,-45,-46,-47,-48,-49,-54,9,-10,-12,9,9,-53,-64,-67,-65,-66,9,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,9,-63,9,-50,-56,-58,-59,-61,-60,-62,]),'BOOL_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[10,10,-6,-5,10,10,-11,10,10,-8,-45,-46,-47,-48,-49,-54,10,-10,-12,10,10,-53,-64,-67,-65,-66,10,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,10,-63,10,-50,-56,-58,-59,-61,-60,-62,]),'INT_KW':([0,2,3,12,15,17,28,32,43,44,45,46,47,48,49,51,83,84,86,93,95,97,101,104,150,151,159,160,162,163,164,165,166,167,168,174,177,178,179,180,183,185,186,194,195,198,200,202,],[11,11,-6,-5,11,11,-11,11,11,-8,-45,-46,-47,-48,-49,-54,11,-10,-12,11,11,-53,-64,-67,-65,-66,11,-7,-39,-40,-41,-42,-43,-44,-13,-9,-55,-57,11,-63,11,-50,-56,-58,-59,-61,-60,-62,]),'$end':([1,2,3,12,28,44,45,46,47,48,49,51,84,86,97,101,104,150,151,160,162,163,164,165,166,167,174,177,178,180,185,186,194,195,198,200,202,],[0,-1,-6,-5,-11,-8,-45,-46,-47,-48,-49,-54,-10,-12,-53,-64,-67,-65,-66,-7,-39,-40,-41,-42,-43,-44,-9,-55,-57,-63,-50,-56,-58,-59,-61,-60,-62,]),'LETTER':([4,5,6,7,8,9,10,11,14,20,25,29,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,69,71,72,73,80,83,85,88,89,90,92,93,94,96,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,144,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[13,14,-22,-23,-24,-25,-26,-27,16,-2,35,16,41,41,89,-3,41,-36,-45,-46,-47,-48,-49,-54,41,-106,109,89,-119,-120,-121,-122,-123,89,-101,-102,-103,35,-36,16,109,-3,41,-52,-36,16,-21,-53,89,89,89,-64,-106,-67,41,41,-108,-72,-73,-74,-75,-76,89,89,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,41,-35,-20,89,89,-65,-66,41,41,-36,-51,-39,-40,-41,-42,-43,-44,-13,41,41,-107,-52,-55,-57,41,-63,41,41,-36,41,-50,-56,-52,-52,41,41,41,41,41,-58,-59,-61,41,-60,-62,]),'NUMBER':([6,7,8,9,10,11,14,26,29,31,37,40,42,43,45,46,47,48,49,51,56,60,62,63,64,65,66,69,71,72,73,83,85,90,92,93,94,96,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,144,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-22,-23,-24,-25,-26,-27,20,36,20,20,20,20,20,-36,-45,-46,-47,-48,-49,-54,20,20,-119,-120,-121,-122,-123,20,-101,-102,-103,-36,20,20,-52,-36,20,-21,-53,20,20,20,-64,-67,20,20,-72,-73,-74,-75,-76,20,20,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,20,-35,-20,20,20,-65,-66,20,20,-36,-51,-39,-40,-41,-42,-43,-44,-13,20,20,-52,-55,-57,20,-63,20,20,-36,20,-50,-56,-52,-52,20,20,20,20,20,-58,-59,-61,20,-60,-62,]),'SEMICOLON':([6,7,8,9,10,11,14,16,18,19,20,21,23,24,29,31,33,34,35,37,38,39,41,43,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,85,88,89,92,93,94,96,97,99,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,141,142,143,144,146,147,148,150,151,152,154,155,156,157,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-22,-23,-24,-25,-26,-27,-4,-3,28,-16,-2,-19,32,-31,-4,51,-32,-34,-37,51,-15,86,-3,-36,-45,-46,-47,-48,-49,97,-54,-71,101,-4,-106,104,-105,-4,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-30,-18,-36,-4,-105,-3,-52,-36,-4,-21,-53,-4,-64,150,151,-67,-4,-69,-70,-108,-72,-73,-74,-75,-76,-79,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-33,-38,-52,-14,-17,-109,51,-35,168,-20,-77,-4,-4,-65,-66,-68,-82,-84,51,-111,-36,-51,-39,-40,-41,-42,-43,-44,-13,51,-78,-81,51,-107,-52,-55,-57,51,-63,51,51,-36,51,-50,-56,-52,-52,51,51,51,51,51,-58,-59,-61,51,-60,-62,]),'COMA':([6,7,8,9,10,11,14,16,18,19,20,21,29,33,34,35,38,39,41,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,85,88,89,90,94,96,99,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,138,139,140,143,144,146,147,148,152,154,155,157,158,170,171,173,175,],[-22,-23,-24,-25,-26,-27,-4,-3,29,-16,-2,-19,-4,80,-34,-37,-15,85,-3,-71,-106,-105,-4,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-18,-4,-105,-3,-4,-4,-21,-4,-4,-69,-70,-108,-72,-73,-74,-75,-76,-79,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-33,-38,85,-17,158,-115,-109,85,-20,-77,-4,-4,-68,-82,-84,-111,-4,-78,-81,-107,-114,]),'COLON':([6,7,8,9,10,11,14,16,19,20,21,29,82,85,94,96,144,],[-22,-23,-24,-25,-26,-27,-4,-3,30,-2,-19,-4,-18,-4,-4,-21,-20,]),'OPENING_PARENTHESES':([13,14,30,31,37,40,41,42,43,45,46,47,48,49,51,52,54,56,60,62,63,64,65,66,69,71,72,73,83,89,90,92,93,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[15,17,40,42,42,42,90,42,-36,-45,-46,-47,-48,-49,-54,98,100,42,42,-119,-120,-121,-122,-123,42,-101,-102,-103,-36,90,42,-52,-36,-53,42,42,42,-64,-67,42,42,-72,-73,-74,-75,-76,42,42,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,42,-35,42,42,-65,-66,42,42,-36,-51,-39,-40,-41,-42,-43,-44,-13,42,42,-52,-55,-57,42,-63,42,42,-36,42,-50,-56,-52,-52,42,42,42,42,42,-58,-59,-61,42,-60,-62,]),'CLOSING_PARENTHESES':([15,17,20,22,23,24,27,33,34,35,40,41,42,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,98,99,100,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,138,139,140,145,146,147,148,149,152,154,155,157,158,170,171,173,175,],[-29,-29,-2,31,-28,-31,37,-32,-34,-37,-4,-3,-4,-71,-106,-105,-4,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-30,136,-105,-3,-4,140,-4,-4,-4,-4,-69,-70,-108,-72,-73,-74,-75,-76,-79,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-33,-38,157,-112,-115,-109,169,-77,-4,-4,172,-68,-82,-84,-111,-4,-78,-81,-107,-114,]),'OPENING_BRACKET':([16,20,31,35,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,69,71,72,73,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[26,-2,-4,81,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,108,-4,-119,-120,-121,-122,-123,-4,-101,-102,-103,-36,108,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,-4,-35,-4,-4,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'PP_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,106,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'MM_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,107,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'EQ_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,110,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'PLE_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,111,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'MIE_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,112,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'MUE_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,113,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'DIE_OP':([20,31,37,41,42,43,45,46,47,48,49,51,56,57,59,83,90,92,93,97,101,103,104,105,108,109,110,111,112,113,114,134,141,142,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,114,-36,-4,-52,-36,-53,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-52,-4,-35,-65,-66,-4,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'PL_OP':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,147,148,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,120,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,-4,-35,-4,-4,-65,-66,120,120,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'MI_OP':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,147,148,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,71,71,71,-3,71,-36,-45,-46,-47,-48,-49,-54,71,-106,-105,71,-119,-120,-121,-122,-123,121,-85,71,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,71,-52,-36,-53,71,71,71,-64,-106,-67,71,71,-108,-72,-73,-74,-75,-76,71,71,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,71,-35,71,71,-65,-66,121,121,71,-111,71,-36,-51,-39,-40,-41,-42,-43,-44,-13,71,71,-107,-52,-55,-57,71,-63,71,71,-36,71,-50,-56,-52,-52,71,71,71,71,71,-58,-59,-61,71,-60,-62,]),'MU_OP':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,147,148,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,72,72,72,-3,72,-36,-45,-46,-47,-48,-49,-54,72,-106,-105,72,-119,-120,-121,-122,-123,122,-85,72,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,72,-52,-36,-53,72,72,72,-64,-106,-67,72,72,-108,-72,-73,-74,-75,-76,72,72,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,72,-35,72,72,-65,-66,122,122,72,-111,72,-36,-51,-39,-40,-41,-42,-43,-44,-13,72,72,-107,-52,-55,-57,72,-63,72,72,-36,72,-50,-56,-52,-52,72,72,72,72,72,-58,-59,-61,72,-60,-62,]),'DI_OP':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,147,148,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,123,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,-4,-35,-4,-4,-65,-66,123,123,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'PE_OP':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,147,148,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,124,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,-4,-35,-4,-4,-65,-66,124,124,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'LE_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,125,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'GE_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,126,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'EQ_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,127,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'GT_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,128,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'LT_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,129,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'NEQ_REL':([20,31,37,40,41,42,43,45,46,47,48,49,51,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,117,120,121,122,123,124,131,134,140,141,142,147,148,150,151,155,156,157,158,159,161,162,163,164,165,166,167,168,169,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,-4,-4,-4,-3,-4,-36,-45,-46,-47,-48,-49,-54,-4,-106,-105,-4,-119,-120,-121,-122,-123,130,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,-105,-3,-4,-52,-36,-53,-4,-4,-4,-64,-106,-67,-4,-4,-108,-72,-73,-74,-75,-76,-4,-94,-95,-96,-97,-98,-99,-52,-109,-4,-35,-4,-4,-65,-66,-84,-4,-111,-4,-36,-51,-39,-40,-41,-42,-43,-44,-13,-4,-4,-107,-52,-55,-57,-4,-63,-4,-4,-36,-4,-50,-56,-52,-52,-4,-4,-4,-4,-4,-58,-59,-61,-4,-60,-62,]),'AA_LOP':([20,31,37,40,41,42,43,45,46,47,48,49,51,53,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,87,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,145,146,147,148,149,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,62,62,62,-3,62,-36,-45,-46,-47,-48,-49,-54,62,62,-106,-105,62,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,62,-105,-3,62,-52,-36,-53,62,62,62,-64,-106,-67,62,62,-108,-72,-73,-74,-75,-76,62,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,62,-35,62,62,62,62,62,-65,-66,-82,-84,62,-111,62,-36,-51,-39,-40,-41,-42,-43,-44,-13,62,62,62,62,-107,-52,-55,-57,62,-63,62,62,-36,62,-50,-56,-52,-52,62,62,62,62,62,-58,-59,-61,62,-60,-62,]),'OO_LOP':([20,31,37,40,41,42,43,45,46,47,48,49,51,53,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,87,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,145,146,147,148,149,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,63,63,63,-3,63,-36,-45,-46,-47,-48,-49,-54,63,63,-106,-105,63,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,63,-105,-3,63,-52,-36,-53,63,63,63,-64,-106,-67,63,63,-108,-72,-73,-74,-75,-76,63,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,63,-35,63,63,63,63,63,-65,-66,-82,-84,63,-111,63,-36,-51,-39,-40,-41,-42,-43,-44,-13,63,63,63,63,-107,-52,-55,-57,63,-63,63,63,-36,63,-50,-56,-52,-52,63,63,63,63,63,-58,-59,-61,63,-60,-62,]),'TIL_LOP':([20,31,37,40,41,42,43,45,46,47,48,49,51,53,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,87,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,145,146,147,148,149,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,64,64,64,-3,64,-36,-45,-46,-47,-48,-49,-54,64,64,-106,-105,64,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,64,-105,-3,64,-52,-36,-53,64,64,64,-64,-106,-67,64,64,-108,-72,-73,-74,-75,-76,64,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,64,-35,64,64,64,64,64,-65,-66,-82,-84,64,-111,64,-36,-51,-39,-40,-41,-42,-43,-44,-13,64,64,64,64,-107,-52,-55,-57,64,-63,64,64,-36,64,-50,-56,-52,-52,64,64,64,64,64,-58,-59,-61,64,-60,-62,]),'AND_LOP':([20,31,37,40,41,42,43,45,46,47,48,49,51,53,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,87,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,145,146,147,148,149,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,65,65,65,-3,65,-36,-45,-46,-47,-48,-49,-54,65,65,-106,-105,65,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,65,-105,-3,65,-52,-36,-53,65,65,65,-64,-106,-67,65,65,-108,-72,-73,-74,-75,-76,65,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,65,-35,65,65,65,65,65,-65,-66,-82,-84,65,-111,65,-36,-51,-39,-40,-41,-42,-43,-44,-13,65,65,65,65,-107,-52,-55,-57,65,-63,65,65,-36,65,-50,-56,-52,-52,65,65,65,65,65,-58,-59,-61,65,-60,-62,]),'OR_LOP':([20,31,37,40,41,42,43,45,46,47,48,49,51,53,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,87,88,89,90,92,93,97,98,99,100,101,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,140,141,142,145,146,147,148,149,150,151,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[-2,66,66,66,-3,66,-36,-45,-46,-47,-48,-49,-54,66,66,-106,-105,66,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,-36,66,-105,-3,66,-52,-36,-53,66,66,66,-64,-106,-67,66,66,-108,-72,-73,-74,-75,-76,66,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-52,-109,66,-35,66,66,66,66,66,-65,-66,-82,-84,66,-111,66,-36,-51,-39,-40,-41,-42,-43,-44,-13,66,66,66,66,-107,-52,-55,-57,66,-63,66,66,-36,66,-50,-56,-52,-52,66,66,66,66,66,-58,-59,-61,66,-60,-62,]),'CLOSING_BRACKET':([20,36,41,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,88,89,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,140,146,147,148,152,153,154,155,157,170,171,173,],[-2,82,-3,-71,-106,-105,-4,-80,-119,-120,-121,-122,-123,-83,-85,-4,-100,-101,-102,-103,-104,-110,-116,-117,-118,133,-105,-3,-4,-4,-69,-70,-4,-108,-72,-73,-74,-75,-76,-79,-4,-4,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-99,-109,-77,-4,-4,-68,173,-82,-84,-111,-78,-81,-107,]),'OPENING_BRACE':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[43,83,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,159,-35,-65,-66,159,-36,-51,-39,-40,-41,-42,-43,-44,-13,179,159,-52,-55,-57,159,-63,159,159,-36,159,-50,-56,-52,-52,159,159,159,159,159,-58,-59,-61,159,-60,-62,]),'IF_KW':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[52,52,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,52,-35,-65,-66,52,-36,-51,-39,-40,-41,-42,-43,-44,-13,52,52,-52,-55,-57,52,-63,52,52,-36,52,-50,-56,-52,-52,52,52,52,52,52,-58,-59,-61,52,-60,-62,]),'TILL_KW':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[54,54,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,54,-35,-65,-66,54,-36,-51,-39,-40,-41,-42,-43,-44,-13,54,54,-52,-55,-57,54,-63,54,54,-36,54,-50,-56,-52,-52,54,54,54,54,54,-58,-59,-61,54,-60,-62,]),'COMEBACK_KW':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[55,55,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,55,-35,-65,-66,55,-36,-51,-39,-40,-41,-42,-43,-44,-13,55,55,-52,-55,-57,55,-63,55,55,-36,55,-50,-56,-52,-52,55,55,55,55,55,-58,-59,-61,55,-60,-62,]),'GIVEBACK_KW':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[56,56,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,56,-35,-65,-66,56,-36,-51,-39,-40,-41,-42,-43,-44,-13,56,56,-52,-55,-57,56,-63,56,56,-36,56,-50,-56,-52,-52,56,56,56,56,56,-58,-59,-61,56,-60,-62,]),'CONTINUE_KW':([31,37,43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[58,58,-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,58,-35,-65,-66,58,-36,-51,-39,-40,-41,-42,-43,-44,-13,58,58,-52,-55,-57,58,-63,58,58,-36,58,-50,-56,-52,-52,58,58,58,58,58,-58,-59,-61,58,-60,-62,]),'QU_UOP':([31,37,40,42,43,45,46,47,48,49,51,56,60,62,63,64,65,66,69,71,72,73,83,90,92,93,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[73,73,73,73,-36,-45,-46,-47,-48,-49,-54,73,73,-119,-120,-121,-122,-123,73,-101,-102,-103,-36,73,-52,-36,-53,73,73,73,-64,-67,73,73,-72,-73,-74,-75,-76,73,73,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,73,-35,73,73,-65,-66,73,73,-36,-51,-39,-40,-41,-42,-43,-44,-13,73,73,-52,-55,-57,73,-63,73,73,-36,73,-50,-56,-52,-52,73,73,73,73,73,-58,-59,-61,73,-60,-62,]),'CONST_KW':([31,37,40,42,43,45,46,47,48,49,51,56,60,62,63,64,65,66,69,71,72,73,83,90,92,93,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[76,76,76,76,-36,-45,-46,-47,-48,-49,-54,76,76,-119,-120,-121,-122,-123,76,-101,-102,-103,-36,76,-52,-36,-53,76,76,76,-64,-67,76,76,-72,-73,-74,-75,-76,76,76,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,76,-35,76,76,-65,-66,76,76,-36,-51,-39,-40,-41,-42,-43,-44,-13,76,76,-52,-55,-57,76,-63,76,76,-36,76,-50,-56,-52,-52,76,76,76,76,76,-58,-59,-61,76,-60,-62,]),'TRUE':([31,37,40,42,43,45,46,47,48,49,51,56,60,62,63,64,65,66,69,71,72,73,83,90,92,93,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[77,77,77,77,-36,-45,-46,-47,-48,-49,-54,77,77,-119,-120,-121,-122,-123,77,-101,-102,-103,-36,77,-52,-36,-53,77,77,77,-64,-67,77,77,-72,-73,-74,-75,-76,77,77,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,77,-35,77,77,-65,-66,77,77,-36,-51,-39,-40,-41,-42,-43,-44,-13,77,77,-52,-55,-57,77,-63,77,77,-36,77,-50,-56,-52,-52,77,77,77,77,77,-58,-59,-61,77,-60,-62,]),'FALSE':([31,37,40,42,43,45,46,47,48,49,51,56,60,62,63,64,65,66,69,71,72,73,83,90,92,93,97,98,99,100,101,104,105,108,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,141,142,147,148,150,151,156,158,159,161,162,163,164,165,166,167,168,169,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,199,200,202,],[78,78,78,78,-36,-45,-46,-47,-48,-49,-54,78,78,-119,-120,-121,-122,-123,78,-101,-102,-103,-36,78,-52,-36,-53,78,78,78,-64,-67,78,78,-72,-73,-74,-75,-76,78,78,-86,-87,-94,-95,-96,-97,-98,-88,-89,-90,-91,-92,-93,-52,78,-35,78,78,-65,-66,78,78,-36,-51,-39,-40,-41,-42,-43,-44,-13,78,78,-52,-55,-57,78,-63,78,78,-36,78,-50,-56,-52,-52,78,78,78,78,78,-58,-59,-61,78,-60,-62,]),'CLOSING_BRACE':([43,45,46,47,48,49,51,83,92,93,97,101,104,134,141,142,150,151,156,159,161,162,163,164,165,166,167,168,176,177,178,180,181,183,185,186,187,188,190,191,194,195,196,197,198,200,201,202,],[-36,-45,-46,-47,-48,-49,-54,-36,-52,-36,-53,-64,-67,-52,160,-35,-65,-66,174,-36,-51,-39,-40,-41,-42,-43,-44,-13,-52,-55,-57,-63,185,-36,-50,-56,-52,-52,194,195,-58,-59,198,200,-61,-60,202,-62,]),'STATIC_KW':([43,83,93,159,168,179,183,],[95,95,95,95,-13,95,95,]),'OTHER_KW':([45,46,47,48,49,51,97,101,104,150,151,162,163,164,165,166,167,177,178,180,184,185,186,188,194,195,197,198,200,202,],[-45,-46,-47,-48,-49,-54,-53,-64,-67,-65,-66,-39,-40,-41,-42,-43,-44,182,-57,-63,189,-50,-56,192,-58,-59,199,-61,-60,-62,]),'THEN_KW':([62,63,64,65,66,99,],[-119,-120,-121,-122,-123,147,]),'ELSE_KW':([62,63,64,65,66,99,],[-119,-120,-121,-122,-123,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'list':([0,],[2,]),'declaration':([0,2,],[3,12,]),'type':([0,2,15,17,32,43,83,93,95,159,179,183,],[5,5,25,25,25,96,96,96,144,96,96,96,]),'varInitialization':([14,29,85,94,],[18,38,38,38,]),'varForm':([14,29,85,94,],[19,19,19,19,]),'numOrLetter':([14,29,31,37,40,42,56,60,69,85,90,94,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[21,21,57,57,57,57,103,57,57,21,57,21,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'parameter':([15,17,],[22,27,]),'listOfParameters':([15,17,],[23,23,]),'paramTypeList':([15,17,32,],[24,24,79,]),'paramList':([25,],[33,]),'paramId':([25,80,],[34,132,]),'variableList':([29,85,94,],[39,135,143,]),'statementWithoutBracket':([31,37,169,],[44,84,177,]),'phrase':([31,37,141,156,169,172,179,181,182,184,189,190,191,192,193,199,],[45,45,162,162,45,162,162,162,162,162,162,162,162,162,162,162,]),'selectPhrase':([31,37,141,156,169,172,179,181,182,184,189,190,191,192,193,199,],[46,46,164,164,46,164,164,164,164,164,164,164,164,164,164,164,]),'iterationPhrase':([31,37,141,156,169,172,179,181,182,184,189,190,191,192,193,199,],[47,47,165,165,47,165,165,165,165,165,165,165,165,165,165,165,]),'returnPhrase':([31,37,141,156,169,172,179,181,182,184,189,190,191,192,193,199,],[48,48,166,166,48,166,166,166,166,166,166,166,166,166,166,166,]),'continue':([31,37,141,156,169,172,179,181,182,184,189,190,191,192,193,199,],[49,49,167,167,49,167,167,167,167,167,167,167,167,167,167,167,]),'allExpression':([31,37,42,56,90,105,108,141,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[50,50,91,102,139,152,153,50,50,175,50,50,50,50,50,50,50,50,50,50,50,50,]),'eachExpression':([31,37,40,42,56,60,90,98,99,100,105,108,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[53,53,87,53,53,115,53,145,146,149,53,53,53,170,171,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'alterable':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[59,59,88,59,59,88,88,59,88,88,88,59,59,88,88,59,88,88,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'logicOp':([31,37,40,42,53,56,60,87,90,98,99,100,105,108,115,141,145,146,147,148,149,156,158,169,170,171,172,179,181,182,184,189,190,191,192,193,199,],[60,60,60,60,99,60,60,99,60,60,60,60,60,60,99,60,99,99,60,60,99,60,60,60,99,99,60,60,60,60,60,60,60,60,60,60,60,]),'relExpression':([31,37,40,42,56,60,90,98,99,100,105,108,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'mathEXP':([31,37,40,42,56,60,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[67,67,67,67,67,67,67,67,67,67,67,67,154,155,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'unaryExpression':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[68,68,68,68,68,68,131,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'unaryop':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'factor':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'inalterable':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'constant':([31,37,40,42,56,60,69,90,98,99,100,105,108,116,117,141,147,148,156,158,169,172,179,181,182,184,189,190,191,192,193,199,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'localDeclarations':([43,83,93,159,183,],[92,134,142,176,187,]),'ScopedVariableDec':([43,83,93,159,179,183,],[93,93,93,93,183,93,]),'scopedSpecifier':([43,83,93,159,179,183,],[94,94,94,94,94,94,]),'mathOp':([59,],[105,]),'compareType':([67,],[116,]),'op':([67,154,155,],[117,117,117,]),'equal':([67,],[118,]),'nonEqual':([67,],[119,]),'args':([90,],[137,]),'arguments':([90,],[138,]),'statementList':([92,134,176,187,188,],[141,156,181,190,191,]),'statement':([141,156,172,179,181,182,184,189,190,191,192,193,199,],[161,161,180,184,161,186,188,193,161,161,196,197,201,]),'compoundPhrase':([141,156,172,179,181,182,184,189,190,191,192,193,199,],[163,163,163,163,163,163,163,163,163,163,163,163,163,]),'ifBodyWithBracket':([169,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> list','program',1,'p_program','parser.py',46),
  ('numOrLetter -> NUMBER','numOrLetter',1,'p_numOrLetter','parser.py',50),
  ('numOrLetter -> LETTER','numOrLetter',1,'p_numOrLetter','parser.py',51),
  ('numOrLetter -> <empty>','numOrLetter',0,'p_numOrLetter','parser.py',52),
  ('list -> list declaration','list',2,'p_list','parser.py',57),
  ('list -> declaration','list',1,'p_list','parser.py',58),
  ('declaration -> VOID_KW LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES OPENING_BRACE localDeclarations statementList CLOSING_BRACE','declaration',9,'p_declaration','parser.py',62),
  ('declaration -> VOID_KW LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES statementWithoutBracket','declaration',6,'p_declaration','parser.py',63),
  ('declaration -> type LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES OPENING_BRACE localDeclarations statementList CLOSING_BRACE','declaration',9,'p_declaration','parser.py',64),
  ('declaration -> type LETTER OPENING_PARENTHESES parameter CLOSING_PARENTHESES statementWithoutBracket','declaration',6,'p_declaration','parser.py',65),
  ('declaration -> type LETTER varInitialization SEMICOLON','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> type LETTER varInitialization COMA variableList SEMICOLON','declaration',6,'p_declaration','parser.py',67),
  ('ScopedVariableDec -> scopedSpecifier variableList SEMICOLON','ScopedVariableDec',3,'p_ScopedVariableDec','parser.py',74),
  ('variableList -> variableList COMA variableList','variableList',3,'p_variableList','parser.py',79),
  ('variableList -> varInitialization','variableList',1,'p_variableList','parser.py',80),
  ('varInitialization -> varForm','varInitialization',1,'p_varInitialization','parser.py',85),
  ('varInitialization -> varForm COLON OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES','varInitialization',5,'p_varInitialization','parser.py',86),
  ('varForm -> LETTER OPENING_BRACKET NUMBER CLOSING_BRACKET','varForm',4,'p_varForm','parser.py',91),
  ('varForm -> numOrLetter','varForm',1,'p_varForm','parser.py',92),
  ('scopedSpecifier -> STATIC_KW type','scopedSpecifier',2,'p_scopedSpecifier','parser.py',96),
  ('scopedSpecifier -> type','scopedSpecifier',1,'p_scopedSpecifier','parser.py',97),
  ('type -> BOOLEAN_KW','type',1,'p_type','parser.py',102),
  ('type -> CHARACTER_KW','type',1,'p_type','parser.py',103),
  ('type -> INTEGER_KW','type',1,'p_type','parser.py',104),
  ('type -> CHAR_KW','type',1,'p_type','parser.py',105),
  ('type -> BOOL_KW','type',1,'p_type','parser.py',106),
  ('type -> INT_KW','type',1,'p_type','parser.py',107),
  ('parameter -> listOfParameters','parameter',1,'p_parameter','parser.py',111),
  ('parameter -> <empty>','parameter',0,'p_parameter','parser.py',112),
  ('listOfParameters -> listOfParameters SEMICOLON paramTypeList','listOfParameters',3,'p_listOfParameters','parser.py',117),
  ('listOfParameters -> paramTypeList','listOfParameters',1,'p_listOfParameters','parser.py',118),
  ('paramTypeList -> type paramList','paramTypeList',2,'p_paramTypeList','parser.py',123),
  ('paramList -> paramList COMA paramId','paramList',3,'p_paramList','parser.py',128),
  ('paramList -> paramId','paramList',1,'p_paramList','parser.py',129),
  ('localDeclarations -> ScopedVariableDec localDeclarations','localDeclarations',2,'p_localDeclarations','parser.py',134),
  ('localDeclarations -> <empty>','localDeclarations',0,'p_localDeclarations','parser.py',135),
  ('paramId -> LETTER','paramId',1,'p_paramId','parser.py',139),
  ('paramId -> LETTER OPENING_BRACKET CLOSING_BRACKET','paramId',3,'p_paramId','parser.py',140),
  ('statement -> phrase','statement',1,'p_statement','parser.py',145),
  ('statement -> compoundPhrase','statement',1,'p_statement','parser.py',146),
  ('statement -> selectPhrase','statement',1,'p_statement','parser.py',147),
  ('statement -> iterationPhrase','statement',1,'p_statement','parser.py',148),
  ('statement -> returnPhrase','statement',1,'p_statement','parser.py',149),
  ('statement -> continue','statement',1,'p_statement','parser.py',150),
  ('statementWithoutBracket -> phrase','statementWithoutBracket',1,'p_statement_without_bracket','parser.py',155),
  ('statementWithoutBracket -> selectPhrase','statementWithoutBracket',1,'p_statement_without_bracket','parser.py',156),
  ('statementWithoutBracket -> iterationPhrase','statementWithoutBracket',1,'p_statement_without_bracket','parser.py',157),
  ('statementWithoutBracket -> returnPhrase','statementWithoutBracket',1,'p_statement_without_bracket','parser.py',158),
  ('statementWithoutBracket -> continue','statementWithoutBracket',1,'p_statement_without_bracket','parser.py',159),
  ('compoundPhrase -> OPENING_BRACE localDeclarations statementList CLOSING_BRACE','compoundPhrase',4,'p_compoundPhrase','parser.py',164),
  ('statementList -> statementList statement','statementList',2,'p_statementList','parser.py',169),
  ('statementList -> <empty>','statementList',0,'p_statementList','parser.py',170),
  ('phrase -> allExpression SEMICOLON','phrase',2,'p_phrase','parser.py',175),
  ('phrase -> SEMICOLON','phrase',1,'p_phrase','parser.py',176),
  ('selectPhrase -> IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statementWithoutBracket','selectPhrase',5,'p_selectPhrase','parser.py',181),
  ('selectPhrase -> IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statementWithoutBracket OTHER_KW statement','selectPhrase',7,'p_selectPhrase','parser.py',182),
  ('selectPhrase -> IF_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES ifBodyWithBracket','selectPhrase',5,'p_selectPhrase','parser.py',183),
  ('ifBodyWithBracket -> OPENING_BRACE ScopedVariableDec localDeclarations statementList CLOSING_BRACE','ifBodyWithBracket',5,'p_ifBody','parser.py',189),
  ('ifBodyWithBracket -> OPENING_BRACE statement statement statementList CLOSING_BRACE','ifBodyWithBracket',5,'p_ifBody','parser.py',190),
  ('ifBodyWithBracket -> OPENING_BRACE statement OTHER_KW statement statement CLOSING_BRACE','ifBodyWithBracket',6,'p_ifBody','parser.py',191),
  ('ifBodyWithBracket -> OPENING_BRACE statement statement OTHER_KW statement CLOSING_BRACE','ifBodyWithBracket',6,'p_ifBody','parser.py',192),
  ('ifBodyWithBracket -> OPENING_BRACE statement OTHER_KW statement statement OTHER_KW statement CLOSING_BRACE','ifBodyWithBracket',8,'p_ifBody','parser.py',193),
  ('iterationPhrase -> TILL_KW OPENING_PARENTHESES eachExpression CLOSING_PARENTHESES statement','iterationPhrase',5,'p_iterationPhrase','parser.py',199),
  ('returnPhrase -> COMEBACK_KW SEMICOLON','returnPhrase',2,'p_returnPhrase','parser.py',204),
  ('returnPhrase -> GIVEBACK_KW allExpression SEMICOLON','returnPhrase',3,'p_returnPhrase','parser.py',205),
  ('returnPhrase -> GIVEBACK_KW numOrLetter SEMICOLON','returnPhrase',3,'p_returnPhrase','parser.py',206),
  ('continue -> CONTINUE_KW SEMICOLON','continue',2,'p_continue','parser.py',211),
  ('allExpression -> alterable mathOp allExpression','allExpression',3,'p_allExpression','parser.py',216),
  ('allExpression -> alterable PP_OP','allExpression',2,'p_allExpression','parser.py',217),
  ('allExpression -> alterable MM_OP','allExpression',2,'p_allExpression','parser.py',218),
  ('allExpression -> eachExpression','allExpression',1,'p_allExpression','parser.py',219),
  ('mathOp -> EQ_OP','mathOp',1,'p_mathOp','parser.py',224),
  ('mathOp -> PLE_OP','mathOp',1,'p_mathOp','parser.py',225),
  ('mathOp -> MIE_OP','mathOp',1,'p_mathOp','parser.py',226),
  ('mathOp -> MUE_OP','mathOp',1,'p_mathOp','parser.py',227),
  ('mathOp -> DIE_OP','mathOp',1,'p_mathOp','parser.py',228),
  ('eachExpression -> eachExpression logicOp eachExpression','eachExpression',3,'p_eachExpression','parser.py',233),
  ('eachExpression -> eachExpression logicOp THEN_KW eachExpression','eachExpression',4,'p_eachExpression','parser.py',234),
  ('eachExpression -> logicOp eachExpression','eachExpression',2,'p_eachExpression','parser.py',235),
  ('eachExpression -> relExpression','eachExpression',1,'p_eachExpression','parser.py',236),
  ('eachExpression -> eachExpression logicOp ELSE_KW eachExpression','eachExpression',4,'p_eachExpression','parser.py',237),
  ('relExpression -> mathEXP compareType mathEXP','relExpression',3,'p_relExpression','parser.py',242),
  ('relExpression -> mathEXP','relExpression',1,'p_relExpression','parser.py',243),
  ('mathEXP -> mathEXP op mathEXP','mathEXP',3,'p_mathEXP','parser.py',248),
  ('mathEXP -> unaryExpression','mathEXP',1,'p_mathEXP','parser.py',249),
  ('compareType -> equal','compareType',1,'p_compareType','parser.py',254),
  ('compareType -> nonEqual','compareType',1,'p_compareType','parser.py',255),
  ('equal -> LE_REL','equal',1,'p_equal','parser.py',260),
  ('equal -> GE_REL','equal',1,'p_equal','parser.py',261),
  ('equal -> EQ_REL','equal',1,'p_equal','parser.py',262),
  ('nonEqual -> GT_REL','nonEqual',1,'p_nonEqual','parser.py',267),
  ('nonEqual -> LT_REL','nonEqual',1,'p_nonEqual','parser.py',268),
  ('nonEqual -> NEQ_REL','nonEqual',1,'p_nonEqual','parser.py',269),
  ('op -> PL_OP','op',1,'p_op','parser.py',274),
  ('op -> MI_OP','op',1,'p_op','parser.py',275),
  ('op -> MU_OP','op',1,'p_op','parser.py',276),
  ('op -> DI_OP','op',1,'p_op','parser.py',277),
  ('op -> PE_OP','op',1,'p_op','parser.py',278),
  ('unaryExpression -> unaryop unaryExpression','unaryExpression',2,'p_unaryExpression','parser.py',283),
  ('unaryExpression -> factor','unaryExpression',1,'p_unaryExpression','parser.py',284),
  ('unaryop -> MI_OP','unaryop',1,'p_unaryop','parser.py',289),
  ('unaryop -> MU_OP','unaryop',1,'p_unaryop','parser.py',290),
  ('unaryop -> QU_UOP','unaryop',1,'p_unaryop','parser.py',291),
  ('factor -> inalterable','factor',1,'p_factor','parser.py',296),
  ('factor -> alterable','factor',1,'p_factor','parser.py',297),
  ('alterable -> numOrLetter','alterable',1,'p_alterable','parser.py',302),
  ('alterable -> alterable OPENING_BRACKET allExpression CLOSING_BRACKET','alterable',4,'p_alterable','parser.py',303),
  ('alterable -> alterable LETTER','alterable',2,'p_alterable','parser.py',304),
  ('inalterable -> OPENING_PARENTHESES allExpression CLOSING_PARENTHESES','inalterable',3,'p_inalterable','parser.py',309),
  ('inalterable -> constant','inalterable',1,'p_inalterable','parser.py',310),
  ('inalterable -> LETTER OPENING_PARENTHESES args CLOSING_PARENTHESES','inalterable',4,'p_inalterable','parser.py',311),
  ('args -> arguments','args',1,'p_args','parser.py',316),
  ('args -> <empty>','args',0,'p_args','parser.py',317),
  ('arguments -> arguments COMA allExpression','arguments',3,'p_arguments','parser.py',322),
  ('arguments -> allExpression','arguments',1,'p_arguments','parser.py',323),
  ('constant -> CONST_KW','constant',1,'p_constant','parser.py',328),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',329),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',330),
  ('logicOp -> AA_LOP','logicOp',1,'p_logicOp','parser.py',335),
  ('logicOp -> OO_LOP','logicOp',1,'p_logicOp','parser.py',336),
  ('logicOp -> TIL_LOP','logicOp',1,'p_logicOp','parser.py',337),
  ('logicOp -> AND_LOP','logicOp',1,'p_logicOp','parser.py',338),
  ('logicOp -> OR_LOP','logicOp',1,'p_logicOp','parser.py',339),
]
