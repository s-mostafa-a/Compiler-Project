type : someTypeKeyWord
parameter : 
localDeclarations : 
type : someTypeKeyWord
varForm : idLetter Opening_Bracket Num Closing_Bracket
varInitialization : varForm
variableList : varInitialization
localDeclarations :  localDeclarations type variableList Semicolon
numOrLetter : idLetter
alterable : numOrLetter
mathOp : Equal
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
equal : LEqual
compareType : equal
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP compareType mathEXP
eachExpression : relExpression
allExpression : eachExpression
allExpression : alterable mathOp allExpression
phrase : allExpression Semicolon
statement : phrase
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP
eachExpression : relExpression
logicOp : And_KW
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP
eachExpression : relExpression
eachExpression : eachExpression logicOp Then_KW eachExpression
continue : Continue_KW Semicolon
statement : continue
localDeclarations : 
type : someTypeKeyWord
varForm : idLetter 
varInitialization : varForm
variableList : varInitialization
localDeclarations :  localDeclarations type variableList Semicolon
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
nonEqual : LessOP
compareType : nonEqual
numOrLetter : Num
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP compareType mathEXP
eachExpression : relExpression
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
nonEqual : NonEqualOP
compareType : nonEqual
numOrLetter : Num
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP compareType mathEXP
eachExpression : relExpression
numOrLetter : idLetter
alterable : numOrLetter
allExpression : alterable PP
phrase : allExpression Semicolon
statement : phrase
iterationPhrase : Till_KW Opening_Parentheses eachExpression Closing_Parentheses statement
statement : iterationPhrase
ifBody : statement
selectPhrase : If_KW Opening_Parentheses eachExpression Closing_Parentheses ifBody
statement : selectPhrase
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
equal : EEqual
compareType : equal
numOrLetter : idLetter
alterable : numOrLetter
factor : alterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP compareType mathEXP
eachExpression : relExpression
numOrLetter : idLetter
alterable : numOrLetter
mathOp : Equal
constant : False_KW
inalterable : constant
factor : inalterable
unaryExpression : factor
mathEXP : unaryExpression
relExpression : mathEXP
eachExpression : relExpression
allExpression : eachExpression
allExpression : alterable mathOp allExpression
phrase : allExpression Semicolon
statement : phrase
ifBody : statement
selectPhrase : If_KW Opening_Parentheses eachExpression Closing_Parentheses ifBody
statement : selectPhrase
statementList :  
statementList :  statement statementList
statementList :  statement statementList
compoundPhrase : Opening_Brace localDeclarations  statementList Closing_Brace
statement : compoundPhrase
ifBody : statement Other_KW statement
selectPhrase : If_KW Opening_Parentheses eachExpression Closing_Parentheses ifBody
statement : selectPhrase
numOrLetter : idLetter
returnPhrase : GiveBack_KW numOrLetter Semicolon
statement : returnPhrase
statementList :  
statementList :  statement statementList
statementList :  statement statementList
statementList :  statement statementList
compoundPhrase : Opening_Brace localDeclarations  statementList Closing_Brace
statement : compoundPhrase
declaration : type idNum Opening_Parentheses parameter Closing_Parentheses statement
list : declaration 
program : list
